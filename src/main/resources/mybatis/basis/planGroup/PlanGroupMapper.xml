<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.ctrl.yjjy.project.basis.planGroup.mapper.PlanGroupMapper">
    
    <resultMap type="PlanGroup" id="PlanGroupResult">
        <result property="id"    column="id"    />
        <result property="planId"    column="plan_id"    />
        <result property="name"    column="name"    />
        <result property="leaderMsg"    column="leader_msg"    />
        <result property="workerMsg"    column="worker_msg"    />
        <result property="word"    column="word"    />
    </resultMap>
	
	<sql id="selectPlanGroupVo">
        select id, plan_id, name, leader_msg, worker_msg from p_plan_group
    </sql>
	
    <select id="selectPlanGroupList" parameterType="PlanGroup" resultMap="PlanGroupResult">
        select g.*,p.name as planName from p_plan_group g
        left join p_plan p on p.id = g.plan_id
        <where>  
            <if test="id != null  and id != '' "> and g.id = #{id}</if>
             <if test="planId != null  and planId != '' "> and g.plan_id = #{planId}</if>
             <if test="name != null  and name != '' "> and g.name = #{name}</if>
             <if test="leaderMsg != null  and leaderMsg != '' "> and g.leader_msg = #{leaderMsg}</if>
             <if test="workerMsg != null  and workerMsg != '' "> and g.worker_msg = #{workerMsg}</if>
         </where>
    </select>
    
    <select id="selectPlanGroupById" parameterType="String" resultMap="PlanGroupResult">
        select g.*,p.name as planName from p_plan_group g
        left join p_plan p on p.id = g.plan_id
        where g.id = #{id}
    </select>
        
    <insert id="insertPlanGroup" parameterType="PlanGroup">
        insert into p_plan_group
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null  and id != ''  ">id,</if>
			<if test="planId != null  and planId != ''  ">plan_id,</if>
			<if test="name != null  and name != ''  ">name,</if>
			<if test="leaderMsg != null  and leaderMsg != ''  ">leader_msg,</if>
			<if test="workerMsg != null  and workerMsg != ''  ">worker_msg,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null  and id != ''  ">#{id},</if>
			<if test="planId != null  and planId != ''  ">#{planId},</if>
			<if test="name != null  and name != ''  ">#{name},</if>
			<if test="leaderMsg != null  and leaderMsg != ''  ">#{leaderMsg},</if>
			<if test="workerMsg != null  and workerMsg != ''  ">#{workerMsg},</if>
         </trim>
    </insert>
	 
    <update id="updatePlanGroup" parameterType="PlanGroup">
        update p_plan_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="planId != null  and planId != ''  ">plan_id = #{planId},</if>
            <if test="name != null  and name != ''  ">name = #{name},</if>
            <if test="leaderMsg != null  and leaderMsg != ''  ">leader_msg = #{leaderMsg},</if>
            <if test="workerMsg != null  and workerMsg != ''  ">worker_msg = #{workerMsg},</if>
            <if test="word != null  and word != ''  ">word = #{word},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deletePlanGroupById" parameterType="String">
        delete from p_plan_group where id = #{id}
    </delete>
	
    <delete id="deletePlanGroupByIds" parameterType="String">
        delete from p_plan_group where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>